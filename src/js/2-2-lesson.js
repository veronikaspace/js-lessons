//**
/*  Методи рядків
/*
/* - slice
/* - toLowerCase/toUpperCase
/* - includes
/* - startsWith/endsWith
/* - indexOf
/* - trim
  */

// // slice // вирізає шматочок з рядка і повертає його, без зміни оригінального рядка.
// const user = "    alice Franko   "; // опційно приймає в себе два аргумента 1. індекс елемента(символа), з якого ми починаємо вирізати рядок 
// // const str = user.slice(0, 3); // 2. індекс, до якого ми хочемо вирізати рядок (не включно!!!!)
// // const str = user.slice(1); // можна передати один аргумент, який віріже шматок, починаючи зі вказаного індекса і до кінця рядка
// // const str = user.slice(); // якщо не передати жодних аргументів, він зробить копію рядка
// // const str = user.slice(-3); // у нього можна передавати відʼємні числа, в такому випадку відлік починається з кінця
// console.log(str); 

// // toLowerCase // приведе всі символи до нижнього регістру і поверне новостворений рядок 
// console.log(user.toLowerCase());
// //toUpperCase // приводить всі символи до верхнього регістру і повертає новостворений рядок
// console.log(user.toUpperCase());

// // includes // перевіряє, чи є в рядочку, який викликав цей метод, підрядок, який він приймає, як аргумент
// console.log(user.includes("li")); //true // повертає булеве значення
// console.log(user.includes("ali")); // false // чутливий до регістру

// // startsWith // перевіряє, чи починається рядок на символи, які метод отримав в себе як аргумент
// console.log(user.startsWith("Al")); //true
// console.log(user.startsWith("al")); // false // також чутливий до регістру
// // endsWith // перевіряє, чи закінчується рядок на символи, які метод отримав в себе як аргумент
// console.log(user.endsWith("ko")); // true
// // обидва методи чутливі до регістру і повертають булевий тип даних

// // indexOf // шукає чи в є в рядку такий підрядок, який він приймає як аргумент 
// console.log(user.indexOf("c")); // 3 // повертає індекс елемента
// console.log(user.indexOf("ce")); // 3 
// console.log(user.indexOf("ca")); // -1 // повертає таке значення, якщо такого підрядка нема
// console.log(user.indexOf("a")); // 0 // якщо в рядку декілька однаковіх символів, метод поверне індекс першого символа який він знайде у рядку

// // trim // прибирає пробіли з початку і з кінця усі пробіли
// console.log(user.trim());



//**
// Форматування посилання 
// 
// Напиши скрипт який перевіряє чи закінчується значення змінної link символом / .
// Якщо ні, додай до кінця значення link цей символ.
// 
// Використовуй конструкцію if...else
// 
//  */

// let link = "https://my-site.com/about";

// if (!link.endsWith("/")) {
//     link += "/";
    
// }
// console.log(link);



//**
// Форматування посилання 
// 
// Напиши скрипт який перевіряє чи закінчується значення змінної link символом / .
// Якщо ні, додай до кінця значення link цей символ, але тільки в тому випадку, якщо в link
// є підрядок "my-site".
// Використовуй конструкцію if...else або тернарний оператор.
// 
//  */

// if (!link.endsWith("/") && link.includes("my-site")) {
//     link += "/";
    
// }
// console.log(link);



//**
//       Пошук у рядку методом includes()
//  */

// const blw1 = "spam";
// const blw2 = "sale";

// const string1 = "Hello, I'm Prince Abdul, this is not spam, I'm offering you";
// const string2 = "Biggest SALE this week, don't mis. out!";
// const string3 = "#fatlivematter advertising campaign";

// console.log(string1.includes(blw1));
// console.log(string1.includes(blw2));
// console.log(string2.includes(blw1));
// const normString = string2.toLowerCase();
// console.log(normString.includes(blw2));
// console.log(string3.includes(blw1));
// console.log(string3.includes(blw2));




//**
// *   Цикли
// * 
// * - Цикл for
// * - Відлік від 0 до N
// * - Зворотній відлік від N до 0
// * - Збільшення/зменшекння лічильника на 2+
// * - Інкремент і декремент
// * - Цикли while i do...while
//  */

// console.log("before");
// //   змінна;   умова виходу з циклу;  збільшення значення  
// for (let i = 0;       i < 5;            i += 1) {
//     console.log(i);
    
// }
// console.log("after");

// //також може працювати і в зворотному напрямку
// for (let i = 10; i >= 0; i -= 2) {
//     console.log(i);
    
// }


// const str = "Alice";

// for (let i = 0; i < str.length; i += 1) {
//     console.log(str[i]); 
    
// }

// // є можливість передчасно перервати цикл ключовим словом break
// for (let i = 0; i < str.length; i += 1) {
//     if (str[i] === 'i') {
//         break; 
//     }
//     console.log(str[i]); 
    
// }



// ------------------------ Інкремент і декремент

// потрібні для того, щоб змінювати(збільшувати або зменшувати) значення змінної

//Інкремент
// a++; // постфіксний
// ++a; // префіксний

// let a = 10;
// const b = a++;
// console.log(a); // 11  // чому так відбувається?
// console.log(b); // 10  // спочатку b = a, яке має значення 10 і тільки після цього a += 1

// let a = 10;
// const b = ++a;
// console.log(a); // 11  // чому так відбувається?
// console.log(b); // 11 // спочатку збільшує a += 1, а після цього b = a

//Декремент 
// a--; // постфіксний
// --a; // префіксний

// let a = 10;
// const b = a--; 
// console.log(a); // 9   // чому так відбувається?
// console.log(b); // 10 // b = a, потім a -= 1

// let a = 10;
// const b = --a; 
// console.log(a); // 9   // чому так відбувається?
// console.log(b); // 9 //a -= 1,  потім  b = a

// //можна використовувати в циклах
// const str = "Alice";
// for (let i = 0; i < str.length; i++) {
//     console.log(str[i]); 
    
// }


// ---------------------------- while

// console.log("before");

// let counter = 0;

// while (counter < 5) {       // ОБОВʼЯЗКОВО СТАВИТИ counter++ ЩОБ ЦИКЛ КОЛИСЬ ЗАВЕРШИВСЯ, ЯКЩО ЦЬОГО НЕ ЗРОБИТИ, МОЖНА ПОТРАПИТИ В НЕСКІНЕЧНИЙ ЦИКЛ
//     console.log(counter);   //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//     counter += 1;
    
// }

// console.log("after");


//-------------------------- do...while
// // let a = 0;
// let a = 10; // навіть якщо умова хибна, цикл виконається принаймні 1 раз
// do {
//     console.log(a); // 10
//     a++;

// } while (a < 6)



// -------------------------------------- 4

/**
 * Напиши цикл for, який виводить у консоль браузера
 * числа за зростанням від a до b, 
 * але тільки якщо число кратне 5.         // кратне число - число, яке ділиться на інше число без залишку, без остачі
 */                                        // залишок від ділення повертає нуль

// const a = 20;
// const b = 100;

// for (let i = a; i <= b; i++) {
//     if (i % 5 === 0) {
//         console.log(i);
        
//     }
    
// }

// або покращенний варіант

// for (let i = a; i <= b; i++) {   // WTF????? до мене тільки зараз дійшло
//     if (!(i % 5)) {
//         console.log(i);
        
//     }
    
// }

// //а тепер у зворотньому значенні
// for (let i = b; i >= a; i--) {
//     if (!(i % 5)) {
//         console.log(i);
        
//     }
// }



/*
 * Напиши скрипт, який підраховує суму всіх парних чисел,
 * які входять в діапазон чисел у змінних від min до max.
 * Наприклад, якщо min=0 и max=5, то діапазон 0-5, і в 
 * ньому два парних числа - 2 і 4, їх сума 6.
 */

// const min = 0;
// const max = 5;
// let total = 0;

// // for (let i = min; i <= max; i++) {   // тут ми відбирали числа які нас влаштовують
// //     if (i % 2 === 0) {
// //         total += i;
// //     }
// // }
// // console.log(total);

// //abo більш складніший варіант

// for (let i = min; i <= max; i++) {      // тут ми відбираємо числа, які, навпаки, нас не влаштовують
//     if (i % 2 !== 0) {
//         continue;   // це ключове слово припиняє поточну ітерацію циклу
//     }
    
//     total += i;
// }
// console.log(total);


